; generated by drom from package skeleton 'library'

(library
  (name niagara_ast)
  (public_name niagara-ast)
  (wrapped true)
  ; use field 'dune-libraries' to add libraries without opam deps
  (libraries sedlex ocamlgraph niagara-utils menhirLib calendar )
  ; use field 'dune-flags' to set this value
  (flags (:standard))
  ; use field 'dune-stanzas' to add more stanzas here
  (preprocess (pps sedlex.ppx))
  
  )


(rule
    (targets version.ml)
    (deps (:script version.mlt) package.toml)
    (action (with-stdout-to %{targets} (run %{ocaml} unix.cma %{script}))))

(documentation
  (package niagara-ast))

; use field 'dune-trailer' to add more stuff here

; Grammar maintenance utilities

(menhir
 (modules parser)
 (flags -v --table)
)

(rule
 (with-stdout-to
  parser.messages.new
  (run
   menhir
   %{dep:parser.mly}
   --list-errors)))

(rule
 (mode fallback)
 (action
  (copy parser.messages.new parser.messages)))

(rule
 (with-stdout-to
  parserErrors.ml
  (run
   menhir
   %{dep:parser.mly}
   --compile-errors
   %{dep:parser.messages})))

(rule
 (with-stdout-to
  parser.messages.updated
  (run
   menhir
   %{dep:parser.mly}
   --merge-errors
   %{dep:parser.messages.new}
   --merge-errors
   %{dep:parser.messages})))

(rule
 (mode promote) ; doesn't works, why?
 (alias update-parser-messages)
 (action
  (diff parser.messages %{dep:parser.messages.updated})))

